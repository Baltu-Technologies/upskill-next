{"ast":null,"code":"/*eslint-disable*/import React from\"react\";import{useTable,useFilters,useAsyncDebounce,useSortBy,usePagination}from\"react-table\";import classnames from\"classnames\";// A great library for fuzzy filtering/sorting items\nimport{matchSorter}from\"match-sorter\";// react plugin used to create DropdownMenu for selecting items\nimport Select from\"react-select\";// reactstrap components\nimport{FormGroup,Input,Row,Col}from\"reactstrap\";// Define a default UI for filtering\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function DefaultColumnFilter(_ref){let{column:{filterValue,preFilteredRows,setFilter}}=_ref;const count=preFilteredRows.length;return/*#__PURE__*/_jsx(FormGroup,{children:/*#__PURE__*/_jsx(Input,{type:\"email\",value:filterValue||\"\",onChange:e=>{setFilter(e.target.value||undefined);// Set undefined to remove the filter entirely\n},placeholder:`Search ${count} records...`})});}function fuzzyTextFilterFn(rows,id,filterValue){return matchSorter(rows,filterValue,{keys:[row=>row.values[id]]});}// Let the table remove the filter if the string is empty\nfuzzyTextFilterFn.autoRemove=val=>!val;// Our table component\nfunction Table(_ref2){let{columns,data}=_ref2;const[numberOfRows,setNumberOfRows]=React.useState(10);const[pageSelect,handlePageSelect]=React.useState(0);const filterTypes=React.useMemo(()=>({// Add a new fuzzyTextFilterFn filter type.\nfuzzyText:fuzzyTextFilterFn,// Or, override the default text filter to use\n// \"startWith\"\ntext:(rows,id,filterValue)=>{return rows.filter(row=>{const rowValue=row.values[id];return rowValue!==undefined?String(rowValue).toLowerCase().startsWith(String(filterValue).toLowerCase()):true;});}}),[]);const defaultColumn=React.useMemo(()=>({// Let's set up our default Filter UI\nFilter:DefaultColumnFilter}),[]);const{getTableProps,getTableBodyProps,headerGroups,page,prepareRow,state,visibleColumns,nextPage,pageOptions,pageCount,previousPage,canPreviousPage,canNextPage,setPageSize,gotoPage}=useTable({columns,data,defaultColumn,// Be sure to pass the defaultColumn option\nfilterTypes,initialState:{pageSize:10,pageIndex:0}},useFilters,// useFilters!\nuseSortBy,usePagination);// We don't want to render all of the rows for this example, so cap\n// it for this use case\n// const firstPageRows = rows.slice(0, 10);\nlet pageSelectData=Array.apply(null,Array(pageOptions.length)).map(function(){});let numberOfRowsData=[5,10,20,25,50,100];return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"ReactTable -striped -highlight\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"pagination-top\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"-pagination\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"-previous\",children:/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>previousPage(),disabled:!canPreviousPage,className:\"-btn\",children:\"Previous\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"-center flex-nowrap\",children:[/*#__PURE__*/_jsx(Select,{className:\"react-select info mx-5 w-100\",classNamePrefix:\"react-select\",name:\"singleSelect\",value:pageSelect,onChange:value=>{gotoPage(value.value);handlePageSelect(value);},options:pageSelectData.map((prop,key)=>{return{value:key,label:\"Page \"+(key+1)};}),placeholder:\"Select page\"}),/*#__PURE__*/_jsx(Select,{className:\"react-select info mx-5 w-100\",classNamePrefix:\"react-select\",name:\"singleSelect\",value:numberOfRows,onChange:value=>{console.log(value);setPageSize(value.value);setNumberOfRows(value);},options:numberOfRowsData.map(prop=>{return{value:prop,label:prop+\" rows\"};}),placeholder:\"Select #rows\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"-next\",children:/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>nextPage(),disabled:!canNextPage,className:\"-btn\",children:\"Next\"})})]})}),/*#__PURE__*/_jsxs(\"table\",{...getTableProps(),className:\"rt-table\",children:[/*#__PURE__*/_jsx(\"thead\",{className:\"rt-thead -header\",children:headerGroups.map(headerGroup=>/*#__PURE__*/_jsx(\"tr\",{...headerGroup.getHeaderGroupProps(),className:\"rt-tr\",children:headerGroup.headers.map((column,key)=>/*#__PURE__*/_jsxs(\"th\",{...column.getHeaderProps(column.getSortByToggleProps()),className:classnames(\"rt-th rt-resizable-header\",{\"-cursor-pointer\":headerGroup.headers.length-1!==key,\"-sort-asc\":column.isSorted&&!column.isSortedDesc,\"-sort-desc\":column.isSorted&&column.isSortedDesc}),children:[/*#__PURE__*/_jsx(\"div\",{className:\"rt-resizable-header-content\",children:column.render(\"Header\")}),/*#__PURE__*/_jsx(\"div\",{children:headerGroup.headers.length-1===key?null:column.canFilter?column.render(\"Filter\"):null})]}))}))}),/*#__PURE__*/_jsx(\"tbody\",{...getTableBodyProps(),className:\"rt-tbody\",children:page.map((row,i)=>{prepareRow(row);return/*#__PURE__*/_jsx(\"tr\",{...row.getRowProps(),className:classnames(\"rt-tr\",{\" -odd\":i%2===0},{\" -even\":i%2===1}),children:row.cells.map(cell=>{return/*#__PURE__*/_jsx(\"td\",{...cell.getCellProps(),className:\"rt-td\",children:cell.render(\"Cell\")});})});})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"pagination-bottom\"})]})});}// Define a custom filter filter function!\nfunction filterGreaterThan(rows,id,filterValue){return rows.filter(row=>{const rowValue=row.values[id];return rowValue>=filterValue;});}// This is an autoRemove method on the filter function that\n// when given the new filter value and returns true, the filter\n// will be automatically removed. Normally this is just an undefined\n// check, but here, we want to remove the filter if it's not a number\nfilterGreaterThan.autoRemove=val=>typeof val!==\"number\";export default Table;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}