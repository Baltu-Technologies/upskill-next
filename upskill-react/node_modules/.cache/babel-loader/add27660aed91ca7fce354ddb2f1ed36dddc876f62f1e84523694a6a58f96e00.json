{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chepo_7jhe8rp\\\\Documents\\\\GitHub\\\\Upskill\\\\upskill-react\\\\src\\\\views\\\\admin\\\\SlidesDemo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Card, CardHeader, CardTitle, CardBody, Row, Col, Spinner } from \"reactstrap\";\nimport SlidesPresentation from \"components/SlidesPresentation/SlidesPresentation\";\nimport SlidesService from \"services/slides.service\";\n\n// Import background images for fallback\nimport bg1 from \"assets/img/bg1.jpg\";\nimport bg3 from \"assets/img/bg3.jpg\";\nimport bg5 from \"assets/img/bg5.jpg\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SlidesDemo = () => {\n  _s();\n  const [slides, setSlides] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Fallback slides in case API fails\n  const fallbackSlides = [{\n    title: \"Welcome to Our Presentation\",\n    description: \"This is a sample slide presentation built with React\",\n    image: bg1\n  }, {\n    title: \"Second Slide\",\n    description: \"You can add as many slides as you want with different content\",\n    image: bg3\n  }, {\n    title: \"Third Slide\",\n    description: \"Each slide can have its own title, description, and image\",\n    image: bg5\n  }];\n  useEffect(() => {\n    fetchSlides();\n  }, []);\n  const fetchSlides = async () => {\n    try {\n      const data = await SlidesService.getAllSlides();\n      setSlides(data);\n      setError(null);\n    } catch (err) {\n      console.error('Error fetching slides:', err);\n      setError('Failed to load slides. Using fallback data.');\n      setSlides(fallbackSlides);\n    } finally {\n      setLoading(false);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(Spinner, {\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading slides...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: \"12\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n                tag: \"h4\",\n                children: \"Slides Presentation Demo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 17\n              }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-warning\",\n                children: /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: error\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n              children: /*#__PURE__*/_jsxDEV(SlidesPresentation, {\n                slides: slides\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(SlidesDemo, \"PW7xxNuTL2tZ9h5olEugg3p/dGk=\");\n_c = SlidesDemo;\nexport default SlidesDemo;\nvar _c;\n$RefreshReg$(_c, \"SlidesDemo\");","map":{"version":3,"names":["React","useState","useEffect","Card","CardHeader","CardTitle","CardBody","Row","Col","Spinner","SlidesPresentation","SlidesService","bg1","bg3","bg5","jsxDEV","_jsxDEV","Fragment","_Fragment","SlidesDemo","_s","slides","setSlides","loading","setLoading","error","setError","fallbackSlides","title","description","image","fetchSlides","data","getAllSlides","err","console","className","children","color","fileName","_jsxFileName","lineNumber","columnNumber","md","tag","_c","$RefreshReg$"],"sources":["C:/Users/chepo_7jhe8rp/Documents/GitHub/Upskill/upskill-react/src/views/admin/SlidesDemo.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Card, CardHeader, CardTitle, CardBody, Row, Col, Spinner } from \"reactstrap\";\r\nimport SlidesPresentation from \"components/SlidesPresentation/SlidesPresentation\";\r\nimport SlidesService from \"services/slides.service\";\r\n\r\n// Import background images for fallback\r\nimport bg1 from \"assets/img/bg1.jpg\";\r\nimport bg3 from \"assets/img/bg3.jpg\";\r\nimport bg5 from \"assets/img/bg5.jpg\";\r\n\r\nconst SlidesDemo = () => {\r\n  const [slides, setSlides] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Fallback slides in case API fails\r\n  const fallbackSlides = [\r\n    {\r\n      title: \"Welcome to Our Presentation\",\r\n      description: \"This is a sample slide presentation built with React\",\r\n      image: bg1\r\n    },\r\n    {\r\n      title: \"Second Slide\",\r\n      description: \"You can add as many slides as you want with different content\",\r\n      image: bg3\r\n    },\r\n    {\r\n      title: \"Third Slide\",\r\n      description: \"Each slide can have its own title, description, and image\",\r\n      image: bg5\r\n    }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    fetchSlides();\r\n  }, []);\r\n\r\n  const fetchSlides = async () => {\r\n    try {\r\n      const data = await SlidesService.getAllSlides();\r\n      setSlides(data);\r\n      setError(null);\r\n    } catch (err) {\r\n      console.error('Error fetching slides:', err);\r\n      setError('Failed to load slides. Using fallback data.');\r\n      setSlides(fallbackSlides);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"content\">\r\n        <div className=\"text-center\">\r\n          <Spinner color=\"primary\" />\r\n          <p>Loading slides...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"content\">\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle tag=\"h4\">Slides Presentation Demo</CardTitle>\r\n                {error && (\r\n                  <div className=\"text-warning\">\r\n                    <small>{error}</small>\r\n                  </div>\r\n                )}\r\n              </CardHeader>\r\n              <CardBody>\r\n                <SlidesPresentation slides={slides} />\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SlidesDemo; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}