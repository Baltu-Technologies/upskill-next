{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chepo_7jhe8rp\\\\Documents\\\\GitHub\\\\Upskill\\\\upskill-react\\\\src\\\\components\\\\TagsInput\\\\TagsInput.js\",\n  _s = $RefreshSig$();\n/* eslint-disable */\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction uniq(arr) {\n  let out = [];\n  for (let i = 0; i < arr.length; i++) {\n    if (out.indexOf(arr[i]) === -1) {\n      out.push(arr[i]);\n    }\n  }\n  return out;\n}\n\n/* istanbul ignore next */\nfunction getClipboardData(e) {\n  if (window.clipboardData) {\n    return window.clipboardData.getData(\"Text\");\n  }\n  if (e.clipboardData) {\n    return e.clipboardData.getData(\"text/plain\");\n  }\n  return \"\";\n}\nfunction defaultRenderTag(props) {\n  let {\n    tag,\n    key,\n    disabled,\n    onRemove,\n    classNameRemove,\n    getTagDisplayValue,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    ...other,\n    children: [getTagDisplayValue(tag), !disabled && /*#__PURE__*/_jsxDEV(\"a\", {\n      className: classNameRemove,\n      onClick: e => onRemove(key)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, key, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\ndefaultRenderTag.propTypes = {\n  key: PropTypes.number,\n  tag: PropTypes.string,\n  onRemove: PropTypes.func,\n  classNameRemove: PropTypes.string,\n  getTagDisplayValue: PropTypes.func\n};\nfunction defaultRenderInput(_ref) {\n  let {\n    addTag,\n    ...props\n  } = _ref;\n  let {\n    onChange,\n    value,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"text\",\n    onChange: onChange,\n    value: value,\n    ...other\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 10\n  }, this);\n}\ndefaultRenderInput.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  addTag: PropTypes.func\n};\nfunction defaultRenderLayout(tagComponents, inputComponent) {\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: [tagComponents, inputComponent]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\nfunction defaultPasteSplit(data) {\n  return data.split(\" \").map(d => d.trim());\n}\nconst defaultInputProps = {\n  className: \"react-tagsinput-input\",\n  placeholder: \"Add a tag\"\n};\nconst TagsInput = /*#__PURE__*/_s(/*#__PURE__*/React.forwardRef(_c = _s((props, ref) => {\n  _s();\n  const divElementRef = React.useRef(null);\n  const inputElementRef = React.useRef(null);\n  const [tagState, setTagState] = React.useState(\"\");\n  const [isFocusedState, setIsFocusedState] = React.useState(false);\n  React.useEffect(() => {\n    if (hasControlledInputHook() && !inputValueHook(props)) {} else {\n      setTagState(inputValueHook(props));\n    }\n  }, [props]);\n  const {\n    value,\n    onChange,\n    tagProps = {\n      className: \"react-tagsinput-tag\",\n      classNameRemove: \"react-tagsinput-remove\"\n    },\n    renderLayout = defaultRenderLayout,\n    renderTag = defaultRenderTag,\n    renderInput = defaultRenderInput,\n    addKeys = [9, 13],\n    removeKeys = [8],\n    className = \"react-tagsinput\",\n    focusedClassName = \"react-tagsinput--focused\",\n    addOnBlur = false,\n    addOnPaste = false,\n    inputProps = {},\n    pasteSplit = defaultPasteSplit,\n    onlyUnique = false,\n    maxTags = -1,\n    validate = () => true,\n    validationRegex = /.*/,\n    disabled = false,\n    tagDisplayProp = null,\n    inputValue,\n    onChangeInput,\n    preventSubmit = true,\n    ...other\n  } = props;\n  const _getTagDisplayValueHook = tagInner => {\n    if (tagDisplayProp) {\n      return tagInner[tagDisplayProp];\n    }\n    return tagInner;\n  };\n  const _makeTagHook = tagInner => {\n    if (tagDisplayProp) {\n      return {\n        [tagDisplayProp]: tagInner\n      };\n    }\n    return tagInner;\n  };\n  const _removeTagHook = indexInner => {\n    let valueInner = value.concat([]);\n    if (indexInner > -1 && indexInner < valueInner.length) {\n      let changed = valueInner.splice(indexInner, 1);\n      onChange(valueInner, changed, [indexInner]);\n    }\n  };\n  const _clearInputHook = () => {\n    if (hasControlledInputHook()) {\n      onChangeInput(\"\");\n    } else {\n      setTagState(\"\");\n    }\n  };\n  const _tagHook = () => {\n    if (hasControlledInputHook()) {\n      return inputValue;\n    }\n    return tagState;\n  };\n  const _addTagsHook = tagsInner => {\n    let {\n      onValidationReject\n    } = props;\n    if (onlyUnique) {\n      tagsInner = uniq(tagsInner);\n      tagsInner = tagsInner.filter(tag => value.every(currentTag => _getTagDisplayValueHook(currentTag) !== _getTagDisplayValueHook(tag)));\n    }\n    const rejectedTags = tagsInner.filter(tag => !_validateHook(_getTagDisplayValueHook(tag)));\n    tagsInner = tagsInner.filter(tag => _validateHook(_getTagDisplayValueHook(tag)));\n    tagsInner = tagsInner.filter(tag => {\n      let tagDisplayValueInner = _getTagDisplayValueHook(tag);\n      if (typeof tagDisplayValueInner.trim === \"function\") {\n        return tagDisplayValueInner.trim().length > 0;\n      } else {\n        return tagDisplayValueInner;\n      }\n    });\n    if (maxTags >= 0) {\n      let remainingLimitInner = Math.max(maxTags - value.length, 0);\n      tagsInner = tagsInner.slice(0, remainingLimitInner);\n    }\n    if (onValidationReject && rejectedTags.length > 0) {\n      onValidationReject(rejectedTags);\n    }\n    if (tagsInner.length > 0) {\n      let newValueInner = value.concat(tagsInner);\n      let indexesInner = [];\n      for (let i = 0; i < tagsInner.length; i++) {\n        indexesInner.push(value.length + i);\n      }\n      onChange(newValueInner, tagsInner, indexesInner);\n      _clearInputHook();\n      return true;\n    }\n    if (rejectedTags.length > 0) {\n      return false;\n    }\n    _clearInputHook();\n    return false;\n  };\n  const _validateHook = tagInner => {\n    return validate(tagInner) && validationRegex.test(tagInner);\n  };\n  const _shouldPreventDefaultEventOnAddHook = (addedInner, emptyInner, keyCodeInner) => {\n    if (addedInner) {\n      return true;\n    }\n    if (keyCodeInner === 13) {\n      return props.preventSubmit || !props.preventSubmit && !emptyInner;\n    }\n    return false;\n  };\n  const focusHook = () => {\n    if (inputElementRef.current && typeof inputElementRef.current.focus === \"function\") {\n      inputElementRef.current.focus();\n    }\n    handleOnFocusHook();\n  };\n  const blurHook = () => {\n    if (inputElementRef.current && typeof inputElementRef.current.blur === \"function\") {\n      inputElementRef.current.blur();\n    }\n    handleOnBlurHook();\n  };\n  const acceptHook = () => {\n    let tagInner = _tagHook();\n    if (tagInner !== \"\") {\n      tagInner = _makeTagHook(tagInner);\n      return _addTagsHook([tagInner]);\n    }\n    return false;\n  };\n  const addTagHook = tagInner => {\n    return _addTagsHook([tagInner]);\n  };\n  const clearInputHook = () => {\n    _clearInputHook();\n  };\n  const handlePasteHook = e => {\n    if (!addOnPaste) {\n      return;\n    }\n    e.preventDefault();\n    let dataInner = getClipboardData(e);\n    let tagsInner = pasteSplit(dataInner).map(tagInner => _makeTagHook(tagInner));\n    _addTagsHook(tagsInner);\n  };\n  const handleKeyDownHook = e => {\n    if (e.defaultPrevented) {\n      return;\n    }\n    const tagInner = _tagHook();\n    let emptyInner = tagInner === \"\";\n    let keyCodeInner = e.keyCode;\n    let keyInner = e.key;\n    let addInner = addKeys.indexOf(keyCodeInner) !== -1 || addKeys.indexOf(keyInner) !== -1;\n    let removeInner = removeKeys.indexOf(keyCodeInner) !== -1 || removeKeys.indexOf(keyInner) !== -1;\n    if (addInner) {\n      let addedInner = acceptHook();\n      if (_shouldPreventDefaultEventOnAddHook(addedInner, emptyInner, keyCodeInner)) {\n        e.preventDefault();\n      }\n    }\n    if (removeInner && value.length > 0 && emptyInner) {\n      e.preventDefault();\n      _removeTagHook(value.length - 1);\n    }\n  };\n  const handleClickHook = e => {\n    if (e.target === divElementRef.current) {\n      focusHook();\n    }\n  };\n  const handleChangeHook = e => {\n    let {\n      onChange\n    } = props.inputProps;\n    let tagInner = e.target.value;\n    if (onChange) {\n      onChange(e);\n    }\n    if (hasControlledInputHook()) {\n      onChangeInput(tagInner);\n    } else {\n      setTagState(tagInner);\n    }\n  };\n  const handleOnFocusHook = e => {\n    let {\n      onFocus\n    } = props.inputProps;\n    if (onFocus) {\n      onFocus(e);\n    }\n    setIsFocusedState(true);\n  };\n  const handleOnBlurHook = e => {\n    let {\n      onBlur\n    } = props.inputProps;\n    setIsFocusedState(false);\n    if (e == null) {\n      return;\n    }\n    if (onBlur) {\n      onBlur(e);\n    }\n    if (addOnBlur) {\n      const tagInner = _makeTagHook(e.target.value);\n      _addTagsHook([tagInner]);\n    }\n  };\n  const handleRemoveHook = tagInner => {\n    _removeTagHook(tagInner);\n  };\n  const inputPropsHook = () => {\n    // eslint-disable-next-line\n    let {\n      onChange,\n      onFocus,\n      onBlur,\n      ...otherInputProps\n    } = props.inputProps;\n    let propsInner = {\n      ...defaultInputProps,\n      ...otherInputProps\n    };\n    if (disabled) {\n      propsInner.disabled = true;\n    }\n    return propsInner;\n  };\n  const inputValueHook = propsInner => {\n    return propsInner.currentValue || propsInner.inputValue || \"\";\n  };\n  const hasControlledInputHook = () => {\n    return typeof onChangeInput === \"function\" && typeof inputValue === \"string\";\n  };\n  let divClassName = className;\n  if (isFocusedState) {\n    divClassName = className + \" \" + focusedClassName;\n  }\n  let tagComponents = value.map((tag, index) => {\n    return renderTag({\n      key: index,\n      tag,\n      onRemove: handleRemoveHook,\n      disabled,\n      getTagDisplayValue: _getTagDisplayValueHook,\n      ...tagProps\n    });\n  });\n  let inputComponent = renderInput({\n    ref: inputElementRef,\n    value: _tagHook(),\n    onPaste: handlePasteHook,\n    onKeyDown: handleKeyDownHook,\n    onChange: handleChangeHook,\n    onFocus: handleOnFocusHook,\n    onBlur: handleOnBlurHook,\n    addTag: addTagHook,\n    ...inputPropsHook()\n  });\n  React.useImperativeHandle(ref, () => ({\n    _getDivElementRef: divElementRef.current,\n    _getInputElementRef: inputElementRef.current,\n    props: props,\n    _getTagState: tagState,\n    _getTagDisplayValue: tagInner => {\n      return _getTagDisplayValueHook(tagInner);\n    },\n    _makeTag: tagInner => {\n      return _makeTagHook(tagInner);\n    },\n    _removeTag: indexInner => {\n      _removeTagHook(indexInner);\n    },\n    _clearInput: () => {\n      _clearInputHook();\n    },\n    _tag: () => {\n      return _tagHook();\n    },\n    _addTags: tagsInner => {\n      return _addTagsHook(tagsInner);\n    },\n    _validate: tagInner => {\n      return _validateHook(tagInner);\n    },\n    _shouldPreventDefaultEventOnAdd: (addedInner, emptyInner, keyCodeInner) => {\n      return _shouldPreventDefaultEventOnAddHook(addedInner, emptyInner, keyCodeInner);\n    },\n    focus: () => {\n      focusHook();\n    },\n    blur: () => {\n      blurHook();\n    },\n    accept: () => {\n      return acceptHook();\n    },\n    addTag: tagInner => {\n      return addTagHook(tagInner);\n    },\n    clearInput: () => {\n      clearInputHook();\n    },\n    handlePaste: e => {\n      handlePasteHook(e);\n    },\n    handleKeyDown: e => {\n      handleKeyDownHook(e);\n    },\n    handleClick: e => {\n      handleClickHook(e);\n    },\n    handleChange: e => {\n      handleChangeHook(e);\n    },\n    handleOnFocus: e => {\n      handleOnFocusHook(e);\n    },\n    handleOnBlur: e => {\n      handleOnBlurHook(e);\n    },\n    handleRemove: tagInner => {\n      handleRemoveHook(tagInner);\n    },\n    inputProps: () => {\n      return inputPropsHook();\n    },\n    inputValue: propsInner => {\n      return inputValueHook(propsInner);\n    },\n    hasControlledInput: () => {\n      return hasControlledInputHook();\n    }\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: divElementRef,\n    onClick: handleClickHook,\n    className: divClassName,\n    children: renderLayout(tagComponents, inputComponent)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 545,\n    columnNumber: 5\n  }, this);\n}, \"b85Iq6m9m+Zf3JB2VYhWMTGcJA8=\")), \"b85Iq6m9m+Zf3JB2VYhWMTGcJA8=\");\n_c2 = TagsInput;\nTagsInput.propTypes = {\n  focusedClassName: PropTypes.string,\n  addKeys: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])),\n  addOnBlur: PropTypes.bool,\n  addOnPaste: PropTypes.bool,\n  currentValue: PropTypes.string,\n  inputValue: PropTypes.string,\n  inputProps: PropTypes.object,\n  onChange: PropTypes.func.isRequired,\n  onChangeInput: PropTypes.func,\n  removeKeys: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])),\n  renderInput: PropTypes.func,\n  renderTag: PropTypes.func,\n  renderLayout: PropTypes.func,\n  pasteSplit: PropTypes.func,\n  tagProps: PropTypes.object,\n  onlyUnique: PropTypes.bool,\n  value: PropTypes.array.isRequired,\n  maxTags: PropTypes.number,\n  validate: PropTypes.func,\n  validationRegex: PropTypes.instanceOf(RegExp),\n  disabled: PropTypes.bool,\n  tagDisplayProp: PropTypes.string,\n  preventSubmit: PropTypes.bool\n};\nexport default TagsInput;\nvar _c, _c2;\n$RefreshReg$(_c, \"TagsInput$React.forwardRef\");\n$RefreshReg$(_c2, \"TagsInput\");","map":{"version":3,"names":["React","PropTypes","jsxDEV","_jsxDEV","uniq","arr","out","i","length","indexOf","push","getClipboardData","e","window","clipboardData","getData","defaultRenderTag","props","tag","key","disabled","onRemove","classNameRemove","getTagDisplayValue","other","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","propTypes","number","string","func","defaultRenderInput","_ref","addTag","onChange","value","type","defaultRenderLayout","tagComponents","inputComponent","defaultPasteSplit","data","split","map","d","trim","defaultInputProps","placeholder","TagsInput","_s","forwardRef","_c","ref","divElementRef","useRef","inputElementRef","tagState","setTagState","useState","isFocusedState","setIsFocusedState","useEffect","hasControlledInputHook","inputValueHook","tagProps","renderLayout","renderTag","renderInput","addKeys","removeKeys","focusedClassName","addOnBlur","addOnPaste","inputProps","pasteSplit","onlyUnique","maxTags","validate","validationRegex","tagDisplayProp","inputValue","onChangeInput","preventSubmit","_getTagDisplayValueHook","tagInner","_makeTagHook","_removeTagHook","indexInner","valueInner","concat","changed","splice","_clearInputHook","_tagHook","_addTagsHook","tagsInner","onValidationReject","filter","every","currentTag","rejectedTags","_validateHook","tagDisplayValueInner","remainingLimitInner","Math","max","slice","newValueInner","indexesInner","test","_shouldPreventDefaultEventOnAddHook","addedInner","emptyInner","keyCodeInner","focusHook","current","focus","handleOnFocusHook","blurHook","blur","handleOnBlurHook","acceptHook","addTagHook","clearInputHook","handlePasteHook","preventDefault","dataInner","handleKeyDownHook","defaultPrevented","keyCode","keyInner","addInner","removeInner","handleClickHook","target","handleChangeHook","onFocus","onBlur","handleRemoveHook","inputPropsHook","otherInputProps","propsInner","currentValue","divClassName","index","onPaste","onKeyDown","useImperativeHandle","_getDivElementRef","_getInputElementRef","_getTagState","_getTagDisplayValue","_makeTag","_removeTag","_clearInput","_tag","_addTags","_validate","_shouldPreventDefaultEventOnAdd","accept","clearInput","handlePaste","handleKeyDown","handleClick","handleChange","handleOnFocus","handleOnBlur","handleRemove","hasControlledInput","_c2","arrayOf","oneOfType","bool","object","isRequired","array","instanceOf","RegExp","$RefreshReg$"],"sources":["C:/Users/chepo_7jhe8rp/Documents/GitHub/Upskill/upskill-react/src/components/TagsInput/TagsInput.js"],"sourcesContent":["/* eslint-disable */\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction uniq(arr) {\n  let out = [];\n\n  for (let i = 0; i < arr.length; i++) {\n    if (out.indexOf(arr[i]) === -1) {\n      out.push(arr[i]);\n    }\n  }\n\n  return out;\n}\n\n/* istanbul ignore next */\nfunction getClipboardData(e) {\n  if (window.clipboardData) {\n    return window.clipboardData.getData(\"Text\");\n  }\n\n  if (e.clipboardData) {\n    return e.clipboardData.getData(\"text/plain\");\n  }\n\n  return \"\";\n}\n\nfunction defaultRenderTag(props) {\n  let {\n    tag,\n    key,\n    disabled,\n    onRemove,\n    classNameRemove,\n    getTagDisplayValue,\n    ...other\n  } = props;\n  return (\n    <span key={key} {...other}>\n      {getTagDisplayValue(tag)}\n      {!disabled && (\n        <a className={classNameRemove} onClick={(e) => onRemove(key)} />\n      )}\n    </span>\n  );\n}\n\ndefaultRenderTag.propTypes = {\n  key: PropTypes.number,\n  tag: PropTypes.string,\n  onRemove: PropTypes.func,\n  classNameRemove: PropTypes.string,\n  getTagDisplayValue: PropTypes.func,\n};\n\nfunction defaultRenderInput({ addTag, ...props }) {\n  let { onChange, value, ...other } = props;\n  return <input type=\"text\" onChange={onChange} value={value} {...other} />;\n}\n\ndefaultRenderInput.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  addTag: PropTypes.func,\n};\n\nfunction defaultRenderLayout(tagComponents, inputComponent) {\n  return (\n    <span>\n      {tagComponents}\n      {inputComponent}\n    </span>\n  );\n}\n\nfunction defaultPasteSplit(data) {\n  return data.split(\" \").map((d) => d.trim());\n}\n\nconst defaultInputProps = {\n  className: \"react-tagsinput-input\",\n  placeholder: \"Add a tag\",\n};\n\nconst TagsInput = React.forwardRef((props, ref) => {\n  const divElementRef = React.useRef(null);\n  const inputElementRef = React.useRef(null);\n  const [tagState, setTagState] = React.useState(\"\");\n  const [isFocusedState, setIsFocusedState] = React.useState(false);\n  React.useEffect(() => {\n    if (hasControlledInputHook() && !inputValueHook(props)) {\n    } else {\n      setTagState(inputValueHook(props));\n    }\n  }, [props]);\n  const {\n    value,\n    onChange,\n    tagProps = {\n      className: \"react-tagsinput-tag\",\n      classNameRemove: \"react-tagsinput-remove\",\n    },\n    renderLayout = defaultRenderLayout,\n    renderTag = defaultRenderTag,\n    renderInput = defaultRenderInput,\n    addKeys = [9, 13],\n    removeKeys = [8],\n    className = \"react-tagsinput\",\n    focusedClassName = \"react-tagsinput--focused\",\n    addOnBlur = false,\n    addOnPaste = false,\n    inputProps = {},\n    pasteSplit = defaultPasteSplit,\n    onlyUnique = false,\n    maxTags = -1,\n    validate = () => true,\n    validationRegex = /.*/,\n    disabled = false,\n    tagDisplayProp = null,\n    inputValue,\n    onChangeInput,\n    preventSubmit = true,\n    ...other\n  } = props;\n  const _getTagDisplayValueHook = (tagInner) => {\n    if (tagDisplayProp) {\n      return tagInner[tagDisplayProp];\n    }\n\n    return tagInner;\n  };\n\n  const _makeTagHook = (tagInner) => {\n    if (tagDisplayProp) {\n      return {\n        [tagDisplayProp]: tagInner,\n      };\n    }\n\n    return tagInner;\n  };\n\n  const _removeTagHook = (indexInner) => {\n    let valueInner = value.concat([]);\n    if (indexInner > -1 && indexInner < valueInner.length) {\n      let changed = valueInner.splice(indexInner, 1);\n      onChange(valueInner, changed, [indexInner]);\n    }\n  };\n\n  const _clearInputHook = () => {\n    if (hasControlledInputHook()) {\n      onChangeInput(\"\");\n    } else {\n      setTagState(\"\");\n    }\n  };\n\n  const _tagHook = () => {\n    if (hasControlledInputHook()) {\n      return inputValue;\n    }\n\n    return tagState;\n  };\n\n  const _addTagsHook = (tagsInner) => {\n    let { onValidationReject } = props;\n\n    if (onlyUnique) {\n      tagsInner = uniq(tagsInner);\n      tagsInner = tagsInner.filter((tag) =>\n        value.every(\n          (currentTag) =>\n            _getTagDisplayValueHook(currentTag) !== _getTagDisplayValueHook(tag)\n        )\n      );\n    }\n\n    const rejectedTags = tagsInner.filter(\n      (tag) => !_validateHook(_getTagDisplayValueHook(tag))\n    );\n    tagsInner = tagsInner.filter((tag) =>\n      _validateHook(_getTagDisplayValueHook(tag))\n    );\n    tagsInner = tagsInner.filter((tag) => {\n      let tagDisplayValueInner = _getTagDisplayValueHook(tag);\n      if (typeof tagDisplayValueInner.trim === \"function\") {\n        return tagDisplayValueInner.trim().length > 0;\n      } else {\n        return tagDisplayValueInner;\n      }\n    });\n\n    if (maxTags >= 0) {\n      let remainingLimitInner = Math.max(maxTags - value.length, 0);\n      tagsInner = tagsInner.slice(0, remainingLimitInner);\n    }\n\n    if (onValidationReject && rejectedTags.length > 0) {\n      onValidationReject(rejectedTags);\n    }\n\n    if (tagsInner.length > 0) {\n      let newValueInner = value.concat(tagsInner);\n      let indexesInner = [];\n      for (let i = 0; i < tagsInner.length; i++) {\n        indexesInner.push(value.length + i);\n      }\n      onChange(newValueInner, tagsInner, indexesInner);\n      _clearInputHook();\n      return true;\n    }\n\n    if (rejectedTags.length > 0) {\n      return false;\n    }\n\n    _clearInputHook();\n    return false;\n  };\n\n  const _validateHook = (tagInner) => {\n    return validate(tagInner) && validationRegex.test(tagInner);\n  };\n\n  const _shouldPreventDefaultEventOnAddHook = (\n    addedInner,\n    emptyInner,\n    keyCodeInner\n  ) => {\n    if (addedInner) {\n      return true;\n    }\n\n    if (keyCodeInner === 13) {\n      return props.preventSubmit || (!props.preventSubmit && !emptyInner);\n    }\n\n    return false;\n  };\n\n  const focusHook = () => {\n    if (\n      inputElementRef.current &&\n      typeof inputElementRef.current.focus === \"function\"\n    ) {\n      inputElementRef.current.focus();\n    }\n\n    handleOnFocusHook();\n  };\n\n  const blurHook = () => {\n    if (\n      inputElementRef.current &&\n      typeof inputElementRef.current.blur === \"function\"\n    ) {\n      inputElementRef.current.blur();\n    }\n\n    handleOnBlurHook();\n  };\n\n  const acceptHook = () => {\n    let tagInner = _tagHook();\n\n    if (tagInner !== \"\") {\n      tagInner = _makeTagHook(tagInner);\n      return _addTagsHook([tagInner]);\n    }\n\n    return false;\n  };\n\n  const addTagHook = (tagInner) => {\n    return _addTagsHook([tagInner]);\n  };\n\n  const clearInputHook = () => {\n    _clearInputHook();\n  };\n\n  const handlePasteHook = (e) => {\n    if (!addOnPaste) {\n      return;\n    }\n\n    e.preventDefault();\n\n    let dataInner = getClipboardData(e);\n    let tagsInner = pasteSplit(dataInner).map((tagInner) =>\n      _makeTagHook(tagInner)\n    );\n\n    _addTagsHook(tagsInner);\n  };\n\n  const handleKeyDownHook = (e) => {\n    if (e.defaultPrevented) {\n      return;\n    }\n\n    const tagInner = _tagHook();\n    let emptyInner = tagInner === \"\";\n    let keyCodeInner = e.keyCode;\n    let keyInner = e.key;\n    let addInner =\n      addKeys.indexOf(keyCodeInner) !== -1 || addKeys.indexOf(keyInner) !== -1;\n    let removeInner =\n      removeKeys.indexOf(keyCodeInner) !== -1 ||\n      removeKeys.indexOf(keyInner) !== -1;\n\n    if (addInner) {\n      let addedInner = acceptHook();\n      if (\n        _shouldPreventDefaultEventOnAddHook(\n          addedInner,\n          emptyInner,\n          keyCodeInner\n        )\n      ) {\n        e.preventDefault();\n      }\n    }\n\n    if (removeInner && value.length > 0 && emptyInner) {\n      e.preventDefault();\n      _removeTagHook(value.length - 1);\n    }\n  };\n\n  const handleClickHook = (e) => {\n    if (e.target === divElementRef.current) {\n      focusHook();\n    }\n  };\n\n  const handleChangeHook = (e) => {\n    let { onChange } = props.inputProps;\n    let tagInner = e.target.value;\n\n    if (onChange) {\n      onChange(e);\n    }\n\n    if (hasControlledInputHook()) {\n      onChangeInput(tagInner);\n    } else {\n      setTagState(tagInner);\n    }\n  };\n\n  const handleOnFocusHook = (e) => {\n    let { onFocus } = props.inputProps;\n\n    if (onFocus) {\n      onFocus(e);\n    }\n\n    setIsFocusedState(true);\n  };\n\n  const handleOnBlurHook = (e) => {\n    let { onBlur } = props.inputProps;\n\n    setIsFocusedState(false);\n\n    if (e == null) {\n      return;\n    }\n\n    if (onBlur) {\n      onBlur(e);\n    }\n\n    if (addOnBlur) {\n      const tagInner = _makeTagHook(e.target.value);\n      _addTagsHook([tagInner]);\n    }\n  };\n\n  const handleRemoveHook = (tagInner) => {\n    _removeTagHook(tagInner);\n  };\n\n  const inputPropsHook = () => {\n    // eslint-disable-next-line\n    let { onChange, onFocus, onBlur, ...otherInputProps } = props.inputProps;\n\n    let propsInner = {\n      ...defaultInputProps,\n      ...otherInputProps,\n    };\n\n    if (disabled) {\n      propsInner.disabled = true;\n    }\n\n    return propsInner;\n  };\n\n  const inputValueHook = (propsInner) => {\n    return propsInner.currentValue || propsInner.inputValue || \"\";\n  };\n\n  const hasControlledInputHook = () => {\n    return (\n      typeof onChangeInput === \"function\" && typeof inputValue === \"string\"\n    );\n  };\n\n  let divClassName = className;\n  if (isFocusedState) {\n    divClassName = className + \" \" + focusedClassName;\n  }\n\n  let tagComponents = value.map((tag, index) => {\n    return renderTag({\n      key: index,\n      tag,\n      onRemove: handleRemoveHook,\n      disabled,\n      getTagDisplayValue: _getTagDisplayValueHook,\n      ...tagProps,\n    });\n  });\n\n  let inputComponent = renderInput({\n    ref: inputElementRef,\n    value: _tagHook(),\n    onPaste: handlePasteHook,\n    onKeyDown: handleKeyDownHook,\n    onChange: handleChangeHook,\n    onFocus: handleOnFocusHook,\n    onBlur: handleOnBlurHook,\n    addTag: addTagHook,\n    ...inputPropsHook(),\n  });\n  React.useImperativeHandle(ref, () => ({\n    _getDivElementRef: divElementRef.current,\n    _getInputElementRef: inputElementRef.current,\n    props: props,\n    _getTagState: tagState,\n\n    _getTagDisplayValue: (tagInner) => {\n      return _getTagDisplayValueHook(tagInner);\n    },\n\n    _makeTag: (tagInner) => {\n      return _makeTagHook(tagInner);\n    },\n\n    _removeTag: (indexInner) => {\n      _removeTagHook(indexInner);\n    },\n\n    _clearInput: () => {\n      _clearInputHook();\n    },\n\n    _tag: () => {\n      return _tagHook();\n    },\n\n    _addTags: (tagsInner) => {\n      return _addTagsHook(tagsInner);\n    },\n\n    _validate: (tagInner) => {\n      return _validateHook(tagInner);\n    },\n\n    _shouldPreventDefaultEventOnAdd: (addedInner, emptyInner, keyCodeInner) => {\n      return _shouldPreventDefaultEventOnAddHook(\n        addedInner,\n        emptyInner,\n        keyCodeInner\n      );\n    },\n\n    focus: () => {\n      focusHook();\n    },\n\n    blur: () => {\n      blurHook();\n    },\n\n    accept: () => {\n      return acceptHook();\n    },\n\n    addTag: (tagInner) => {\n      return addTagHook(tagInner);\n    },\n\n    clearInput: () => {\n      clearInputHook();\n    },\n\n    handlePaste: (e) => {\n      handlePasteHook(e);\n    },\n\n    handleKeyDown: (e) => {\n      handleKeyDownHook(e);\n    },\n\n    handleClick: (e) => {\n      handleClickHook(e);\n    },\n\n    handleChange: (e) => {\n      handleChangeHook(e);\n    },\n\n    handleOnFocus: (e) => {\n      handleOnFocusHook(e);\n    },\n\n    handleOnBlur: (e) => {\n      handleOnBlurHook(e);\n    },\n\n    handleRemove: (tagInner) => {\n      handleRemoveHook(tagInner);\n    },\n\n    inputProps: () => {\n      return inputPropsHook();\n    },\n\n    inputValue: (propsInner) => {\n      return inputValueHook(propsInner);\n    },\n\n    hasControlledInput: () => {\n      return hasControlledInputHook();\n    },\n  }));\n  return (\n    <div ref={divElementRef} onClick={handleClickHook} className={divClassName}>\n      {renderLayout(tagComponents, inputComponent)}\n    </div>\n  );\n});\n\nTagsInput.propTypes = {\n  focusedClassName: PropTypes.string,\n  addKeys: PropTypes.arrayOf(\n    PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n  ),\n  addOnBlur: PropTypes.bool,\n  addOnPaste: PropTypes.bool,\n  currentValue: PropTypes.string,\n  inputValue: PropTypes.string,\n  inputProps: PropTypes.object,\n  onChange: PropTypes.func.isRequired,\n  onChangeInput: PropTypes.func,\n  removeKeys: PropTypes.arrayOf(\n    PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n  ),\n  renderInput: PropTypes.func,\n  renderTag: PropTypes.func,\n  renderLayout: PropTypes.func,\n  pasteSplit: PropTypes.func,\n  tagProps: PropTypes.object,\n  onlyUnique: PropTypes.bool,\n  value: PropTypes.array.isRequired,\n  maxTags: PropTypes.number,\n  validate: PropTypes.func,\n  validationRegex: PropTypes.instanceOf(RegExp),\n  disabled: PropTypes.bool,\n  tagDisplayProp: PropTypes.string,\n  preventSubmit: PropTypes.bool,\n};\n\nexport default TagsInput;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}